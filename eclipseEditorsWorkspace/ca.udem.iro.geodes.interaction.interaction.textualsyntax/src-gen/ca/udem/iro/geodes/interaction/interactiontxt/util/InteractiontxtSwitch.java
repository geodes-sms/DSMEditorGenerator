/**
 * generated by Xtext 2.19.0
 */
package ca.udem.iro.geodes.interaction.interactiontxt.util;

import ca.udem.iro.geodes.interaction.interactiontxt.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see ca.udem.iro.geodes.interaction.interactiontxt.InteractiontxtPackage
 * @generated
 */
public class InteractiontxtSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static InteractiontxtPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public InteractiontxtSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = InteractiontxtPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case InteractiontxtPackage.MODEL:
      {
        Model model = (Model)theEObject;
        T result = caseModel(model);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case InteractiontxtPackage.CA_ELEMENT:
      {
        CAElement caElement = (CAElement)theEObject;
        T result = caseCAElement(caElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case InteractiontxtPackage.CELEMENT:
      {
        CElement cElement = (CElement)theEObject;
        T result = caseCElement(cElement);
        if (result == null) result = caseCAElement(cElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case InteractiontxtPackage.AELEMENT:
      {
        AElement aElement = (AElement)theEObject;
        T result = caseAElement(aElement);
        if (result == null) result = caseCAElement(aElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case InteractiontxtPackage.INTERACTION:
      {
        Interaction interaction = (Interaction)theEObject;
        T result = caseInteraction(interaction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case InteractiontxtPackage.CONDITION:
      {
        Condition condition = (Condition)theEObject;
        T result = caseCondition(condition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case InteractiontxtPackage.START_TRANSITION:
      {
        StartTransition startTransition = (StartTransition)theEObject;
        T result = caseStartTransition(startTransition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case InteractiontxtPackage.TRANSITION:
      {
        Transition transition = (Transition)theEObject;
        T result = caseTransition(transition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case InteractiontxtPackage.ACTION:
      {
        Action action = (Action)theEObject;
        T result = caseAction(action);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case InteractiontxtPackage.CI_ELEMENT:
      {
        CIElement ciElement = (CIElement)theEObject;
        T result = caseCIElement(ciElement);
        if (result == null) result = caseCElement(ciElement);
        if (result == null) result = caseCAElement(ciElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case InteractiontxtPackage.CL_ELEMENT:
      {
        CLElement clElement = (CLElement)theEObject;
        T result = caseCLElement(clElement);
        if (result == null) result = caseCElement(clElement);
        if (result == null) result = caseCAElement(clElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case InteractiontxtPackage.CCANVAS:
      {
        CCanvas cCanvas = (CCanvas)theEObject;
        T result = caseCCanvas(cCanvas);
        if (result == null) result = caseCElement(cCanvas);
        if (result == null) result = caseCAElement(cCanvas);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case InteractiontxtPackage.CV_ELEMENT:
      {
        CVElement cvElement = (CVElement)theEObject;
        T result = caseCVElement(cvElement);
        if (result == null) result = caseCElement(cvElement);
        if (result == null) result = caseCAElement(cvElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case InteractiontxtPackage.AI_ELEMENT:
      {
        AIElement aiElement = (AIElement)theEObject;
        T result = caseAIElement(aiElement);
        if (result == null) result = caseAElement(aiElement);
        if (result == null) result = caseCAElement(aiElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case InteractiontxtPackage.AO_ELEMENT:
      {
        AOElement aoElement = (AOElement)theEObject;
        T result = caseAOElement(aoElement);
        if (result == null) result = caseAElement(aoElement);
        if (result == null) result = caseCAElement(aoElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case InteractiontxtPackage.AL_ELEMENT:
      {
        ALElement alElement = (ALElement)theEObject;
        T result = caseALElement(alElement);
        if (result == null) result = caseAElement(alElement);
        if (result == null) result = caseCAElement(alElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case InteractiontxtPackage.ACANVAS:
      {
        ACanvas aCanvas = (ACanvas)theEObject;
        T result = caseACanvas(aCanvas);
        if (result == null) result = caseAElement(aCanvas);
        if (result == null) result = caseCAElement(aCanvas);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case InteractiontxtPackage.AV_ELEMENT:
      {
        AVElement avElement = (AVElement)theEObject;
        T result = caseAVElement(avElement);
        if (result == null) result = caseAElement(avElement);
        if (result == null) result = caseCAElement(avElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModel(Model object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CA Element</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CA Element</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCAElement(CAElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CElement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CElement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCElement(CElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>AElement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>AElement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAElement(AElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Interaction</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Interaction</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInteraction(Interaction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Condition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Condition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCondition(Condition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Start Transition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Start Transition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStartTransition(StartTransition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Transition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Transition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTransition(Transition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAction(Action object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CI Element</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CI Element</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCIElement(CIElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CL Element</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CL Element</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCLElement(CLElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CCanvas</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CCanvas</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCCanvas(CCanvas object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CV Element</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CV Element</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCVElement(CVElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>AI Element</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>AI Element</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAIElement(AIElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>AO Element</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>AO Element</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAOElement(AOElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>AL Element</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>AL Element</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseALElement(ALElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ACanvas</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ACanvas</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseACanvas(ACanvas object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>AV Element</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>AV Element</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAVElement(AVElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //InteractiontxtSwitch
