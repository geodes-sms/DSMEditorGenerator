/*
 * generated by Xtext 2.19.0
 */
package ca.udem.iro.geodes.interaction.ide.contentassist.antlr;

import ca.udem.iro.geodes.interaction.ide.contentassist.antlr.internal.InternalInteractiontxtParser;
import ca.udem.iro.geodes.interaction.services.InteractiontxtGrammarAccess;
import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class InteractiontxtParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(InteractiontxtGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, InteractiontxtGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getCAElementAccess().getAlternatives(), "rule__CAElement__Alternatives");
			builder.put(grammarAccess.getCElementAccess().getAlternatives(), "rule__CElement__Alternatives");
			builder.put(grammarAccess.getAElementAccess().getAlternatives(), "rule__AElement__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getCIElementAccess().getAlternatives_1(), "rule__CIElement__Alternatives_1");
			builder.put(grammarAccess.getCIElementAccess().getAlternatives_5_2(), "rule__CIElement__Alternatives_5_2");
			builder.put(grammarAccess.getCIElementAccess().getValueAlternatives_5_2_1_0(), "rule__CIElement__ValueAlternatives_5_2_1_0");
			builder.put(grammarAccess.getCLElementAccess().getAlternatives_1(), "rule__CLElement__Alternatives_1");
			builder.put(grammarAccess.getCLElementAccess().getAlternatives_5_2(), "rule__CLElement__Alternatives_5_2");
			builder.put(grammarAccess.getCLElementAccess().getValueAlternatives_5_2_1_0(), "rule__CLElement__ValueAlternatives_5_2_1_0");
			builder.put(grammarAccess.getCCanvasAccess().getAlternatives_1(), "rule__CCanvas__Alternatives_1");
			builder.put(grammarAccess.getCVElementAccess().getAlternatives_1(), "rule__CVElement__Alternatives_1");
			builder.put(grammarAccess.getCVElementAccess().getAlternatives_5(), "rule__CVElement__Alternatives_5");
			builder.put(grammarAccess.getCVElementAccess().getAlternatives_5_0_2(), "rule__CVElement__Alternatives_5_0_2");
			builder.put(grammarAccess.getCVElementAccess().getValueAlternatives_5_0_2_0_0(), "rule__CVElement__ValueAlternatives_5_0_2_0_0");
			builder.put(grammarAccess.getAOElementAccess().getAlternatives_4_2(), "rule__AOElement__Alternatives_4_2");
			builder.put(grammarAccess.getAOElementAccess().getValueAlternatives_4_2_0_0(), "rule__AOElement__ValueAlternatives_4_2_0_0");
			builder.put(grammarAccess.getALElementAccess().getAlternatives_4(), "rule__ALElement__Alternatives_4");
			builder.put(grammarAccess.getALElementAccess().getOperationAlternatives_4_0_2_0(), "rule__ALElement__OperationAlternatives_4_0_2_0");
			builder.put(grammarAccess.getALElementAccess().getAlternatives_4_0_3_3(), "rule__ALElement__Alternatives_4_0_3_3");
			builder.put(grammarAccess.getALElementAccess().getValueAlternatives_4_0_3_3_0_1_0(), "rule__ALElement__ValueAlternatives_4_0_3_3_0_1_0");
			builder.put(grammarAccess.getALElementAccess().getValueAlternatives_4_0_3_3_0_2_1_0(), "rule__ALElement__ValueAlternatives_4_0_3_3_0_2_1_0");
			builder.put(grammarAccess.getALElementAccess().getValueAlternatives_4_0_3_3_1_0(), "rule__ALElement__ValueAlternatives_4_0_3_3_1_0");
			builder.put(grammarAccess.getAVElementAccess().getAlternatives_4(), "rule__AVElement__Alternatives_4");
			builder.put(grammarAccess.getAVElementAccess().getOperationAlternatives_4_0_2_0(), "rule__AVElement__OperationAlternatives_4_0_2_0");
			builder.put(grammarAccess.getAVElementAccess().getValueAlternatives_4_0_6_0(), "rule__AVElement__ValueAlternatives_4_0_6_0");
			builder.put(grammarAccess.getAVElementAccess().getAlternatives_4_1_2(), "rule__AVElement__Alternatives_4_1_2");
			builder.put(grammarAccess.getAVElementAccess().getValueAlternatives_4_1_2_1_0(), "rule__AVElement__ValueAlternatives_4_1_2_1_0");
			builder.put(grammarAccess.getInteractionAccess().getGroup(), "rule__Interaction__Group__0");
			builder.put(grammarAccess.getConditionAccess().getGroup(), "rule__Condition__Group__0");
			builder.put(grammarAccess.getStartTransitionAccess().getGroup(), "rule__StartTransition__Group__0");
			builder.put(grammarAccess.getTransitionAccess().getGroup(), "rule__Transition__Group__0");
			builder.put(grammarAccess.getActionAccess().getGroup(), "rule__Action__Group__0");
			builder.put(grammarAccess.getCIElementAccess().getGroup(), "rule__CIElement__Group__0");
			builder.put(grammarAccess.getCIElementAccess().getGroup_5(), "rule__CIElement__Group_5__0");
			builder.put(grammarAccess.getCIElementAccess().getGroup_5_2_0(), "rule__CIElement__Group_5_2_0__0");
			builder.put(grammarAccess.getCLElementAccess().getGroup(), "rule__CLElement__Group__0");
			builder.put(grammarAccess.getCLElementAccess().getGroup_5(), "rule__CLElement__Group_5__0");
			builder.put(grammarAccess.getCLElementAccess().getGroup_5_2_0(), "rule__CLElement__Group_5_2_0__0");
			builder.put(grammarAccess.getCCanvasAccess().getGroup(), "rule__CCanvas__Group__0");
			builder.put(grammarAccess.getCCanvasAccess().getGroup_4(), "rule__CCanvas__Group_4__0");
			builder.put(grammarAccess.getCVElementAccess().getGroup(), "rule__CVElement__Group__0");
			builder.put(grammarAccess.getCVElementAccess().getGroup_5_0(), "rule__CVElement__Group_5_0__0");
			builder.put(grammarAccess.getCVElementAccess().getGroup_5_0_2_1(), "rule__CVElement__Group_5_0_2_1__0");
			builder.put(grammarAccess.getCVElementAccess().getGroup_5_0_3(), "rule__CVElement__Group_5_0_3__0");
			builder.put(grammarAccess.getCVElementAccess().getGroup_5_1(), "rule__CVElement__Group_5_1__0");
			builder.put(grammarAccess.getAIElementAccess().getGroup(), "rule__AIElement__Group__0");
			builder.put(grammarAccess.getAIElementAccess().getGroup_4(), "rule__AIElement__Group_4__0");
			builder.put(grammarAccess.getAOElementAccess().getGroup(), "rule__AOElement__Group__0");
			builder.put(grammarAccess.getAOElementAccess().getGroup_4(), "rule__AOElement__Group_4__0");
			builder.put(grammarAccess.getAOElementAccess().getGroup_4_2_1(), "rule__AOElement__Group_4_2_1__0");
			builder.put(grammarAccess.getALElementAccess().getGroup(), "rule__ALElement__Group__0");
			builder.put(grammarAccess.getALElementAccess().getGroup_4_0(), "rule__ALElement__Group_4_0__0");
			builder.put(grammarAccess.getALElementAccess().getGroup_4_0_3(), "rule__ALElement__Group_4_0_3__0");
			builder.put(grammarAccess.getALElementAccess().getGroup_4_0_3_3_0(), "rule__ALElement__Group_4_0_3_3_0__0");
			builder.put(grammarAccess.getALElementAccess().getGroup_4_0_3_3_0_2(), "rule__ALElement__Group_4_0_3_3_0_2__0");
			builder.put(grammarAccess.getALElementAccess().getGroup_4_1(), "rule__ALElement__Group_4_1__0");
			builder.put(grammarAccess.getACanvasAccess().getGroup(), "rule__ACanvas__Group__0");
			builder.put(grammarAccess.getACanvasAccess().getGroup_3(), "rule__ACanvas__Group_3__0");
			builder.put(grammarAccess.getAVElementAccess().getGroup(), "rule__AVElement__Group__0");
			builder.put(grammarAccess.getAVElementAccess().getGroup_4_0(), "rule__AVElement__Group_4_0__0");
			builder.put(grammarAccess.getAVElementAccess().getGroup_4_1(), "rule__AVElement__Group_4_1__0");
			builder.put(grammarAccess.getAVElementAccess().getGroup_4_1_2_0(), "rule__AVElement__Group_4_1_2_0__0");
			builder.put(grammarAccess.getAVElementAccess().getGroup_4_2(), "rule__AVElement__Group_4_2__0");
			builder.put(grammarAccess.getModelAccess().getInteractionsAssignment(), "rule__Model__InteractionsAssignment");
			builder.put(grammarAccess.getInteractionAccess().getNameAssignment_1(), "rule__Interaction__NameAssignment_1");
			builder.put(grammarAccess.getInteractionAccess().getConditionAssignment_2(), "rule__Interaction__ConditionAssignment_2");
			builder.put(grammarAccess.getConditionAccess().getIdAssignment_2(), "rule__Condition__IdAssignment_2");
			builder.put(grammarAccess.getConditionAccess().getElementsAssignment_4(), "rule__Condition__ElementsAssignment_4");
			builder.put(grammarAccess.getConditionAccess().getTransitionAssignment_6(), "rule__Condition__TransitionAssignment_6");
			builder.put(grammarAccess.getStartTransitionAccess().getEventAssignment_1(), "rule__StartTransition__EventAssignment_1");
			builder.put(grammarAccess.getStartTransitionAccess().getActionAssignment_3(), "rule__StartTransition__ActionAssignment_3");
			builder.put(grammarAccess.getTransitionAccess().getActionAssignment_1(), "rule__Transition__ActionAssignment_1");
			builder.put(grammarAccess.getActionAccess().getIdAssignment_2(), "rule__Action__IdAssignment_2");
			builder.put(grammarAccess.getActionAccess().getElementsAssignment_4(), "rule__Action__ElementsAssignment_4");
			builder.put(grammarAccess.getActionAccess().getTransitionAssignment_6(), "rule__Action__TransitionAssignment_6");
			builder.put(grammarAccess.getCIElementAccess().getIsNegativeAssignment_1_0(), "rule__CIElement__IsNegativeAssignment_1_0");
			builder.put(grammarAccess.getCIElementAccess().getIsFocusAssignment_1_1(), "rule__CIElement__IsFocusAssignment_1_1");
			builder.put(grammarAccess.getCIElementAccess().getIdAssignment_3(), "rule__CIElement__IdAssignment_3");
			builder.put(grammarAccess.getCIElementAccess().getValueAssignment_5_2_0_1(), "rule__CIElement__ValueAssignment_5_2_0_1");
			builder.put(grammarAccess.getCIElementAccess().getOperationAssignment_5_2_0_2(), "rule__CIElement__OperationAssignment_5_2_0_2");
			builder.put(grammarAccess.getCIElementAccess().getValueAssignment_5_2_1(), "rule__CIElement__ValueAssignment_5_2_1");
			builder.put(grammarAccess.getCLElementAccess().getIsNegativeAssignment_1_0(), "rule__CLElement__IsNegativeAssignment_1_0");
			builder.put(grammarAccess.getCLElementAccess().getIsFocusAssignment_1_1(), "rule__CLElement__IsFocusAssignment_1_1");
			builder.put(grammarAccess.getCLElementAccess().getIdAssignment_3(), "rule__CLElement__IdAssignment_3");
			builder.put(grammarAccess.getCLElementAccess().getValueAssignment_5_2_0_1(), "rule__CLElement__ValueAssignment_5_2_0_1");
			builder.put(grammarAccess.getCLElementAccess().getOperationAssignment_5_2_0_2(), "rule__CLElement__OperationAssignment_5_2_0_2");
			builder.put(grammarAccess.getCLElementAccess().getValueAssignment_5_2_1(), "rule__CLElement__ValueAssignment_5_2_1");
			builder.put(grammarAccess.getCCanvasAccess().getIsNegativeAssignment_1_0(), "rule__CCanvas__IsNegativeAssignment_1_0");
			builder.put(grammarAccess.getCCanvasAccess().getIsFocusAssignment_1_1(), "rule__CCanvas__IsFocusAssignment_1_1");
			builder.put(grammarAccess.getCCanvasAccess().getValueAssignment_4_2(), "rule__CCanvas__ValueAssignment_4_2");
			builder.put(grammarAccess.getCVElementAccess().getIsNegativeAssignment_1_0(), "rule__CVElement__IsNegativeAssignment_1_0");
			builder.put(grammarAccess.getCVElementAccess().getIsFocusAssignment_1_1(), "rule__CVElement__IsFocusAssignment_1_1");
			builder.put(grammarAccess.getCVElementAccess().getIdAssignment_3(), "rule__CVElement__IdAssignment_3");
			builder.put(grammarAccess.getCVElementAccess().getValueAssignment_5_0_2_0(), "rule__CVElement__ValueAssignment_5_0_2_0");
			builder.put(grammarAccess.getCVElementAccess().getValueAssignment_5_0_2_1_1(), "rule__CVElement__ValueAssignment_5_0_2_1_1");
			builder.put(grammarAccess.getCVElementAccess().getElementAssignment_5_0_3_3(), "rule__CVElement__ElementAssignment_5_0_3_3");
			builder.put(grammarAccess.getCVElementAccess().getElementAssignment_5_1_2(), "rule__CVElement__ElementAssignment_5_1_2");
			builder.put(grammarAccess.getAIElementAccess().getIdAssignment_2(), "rule__AIElement__IdAssignment_2");
			builder.put(grammarAccess.getAIElementAccess().getValueAssignment_4_3(), "rule__AIElement__ValueAssignment_4_3");
			builder.put(grammarAccess.getAOElementAccess().getOperationAssignment_2(), "rule__AOElement__OperationAssignment_2");
			builder.put(grammarAccess.getAOElementAccess().getValueAssignment_4_2_0(), "rule__AOElement__ValueAssignment_4_2_0");
			builder.put(grammarAccess.getAOElementAccess().getValueAssignment_4_2_1_1(), "rule__AOElement__ValueAssignment_4_2_1_1");
			builder.put(grammarAccess.getALElementAccess().getIdAssignment_2(), "rule__ALElement__IdAssignment_2");
			builder.put(grammarAccess.getALElementAccess().getOperationAssignment_4_0_2(), "rule__ALElement__OperationAssignment_4_0_2");
			builder.put(grammarAccess.getALElementAccess().getValueAssignment_4_0_3_3_0_1(), "rule__ALElement__ValueAssignment_4_0_3_3_0_1");
			builder.put(grammarAccess.getALElementAccess().getValueAssignment_4_0_3_3_0_2_1(), "rule__ALElement__ValueAssignment_4_0_3_3_0_2_1");
			builder.put(grammarAccess.getALElementAccess().getValueAssignment_4_0_3_3_1(), "rule__ALElement__ValueAssignment_4_0_3_3_1");
			builder.put(grammarAccess.getALElementAccess().getValueAssignment_4_1_3(), "rule__ALElement__ValueAssignment_4_1_3");
			builder.put(grammarAccess.getACanvasAccess().getValueAssignment_3_3(), "rule__ACanvas__ValueAssignment_3_3");
			builder.put(grammarAccess.getAVElementAccess().getIdAssignment_2(), "rule__AVElement__IdAssignment_2");
			builder.put(grammarAccess.getAVElementAccess().getOperationAssignment_4_0_2(), "rule__AVElement__OperationAssignment_4_0_2");
			builder.put(grammarAccess.getAVElementAccess().getValueAssignment_4_0_6(), "rule__AVElement__ValueAssignment_4_0_6");
			builder.put(grammarAccess.getAVElementAccess().getValueAssignment_4_1_2_0_1(), "rule__AVElement__ValueAssignment_4_1_2_0_1");
			builder.put(grammarAccess.getAVElementAccess().getOperationAssignment_4_1_2_0_2(), "rule__AVElement__OperationAssignment_4_1_2_0_2");
			builder.put(grammarAccess.getAVElementAccess().getValueAssignment_4_1_2_1(), "rule__AVElement__ValueAssignment_4_1_2_1");
			builder.put(grammarAccess.getAVElementAccess().getElementAssignment_4_2_2(), "rule__AVElement__ElementAssignment_4_2_2");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private InteractiontxtGrammarAccess grammarAccess;

	@Override
	protected InternalInteractiontxtParser createParser() {
		InternalInteractiontxtParser result = new InternalInteractiontxtParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public InteractiontxtGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(InteractiontxtGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
