/* Generated by Statechart compiler by Glenn De Jonghe, Joeri Exelmans, Simon Van Mierlo, && Yentl Van Tendeloo (for the inspiration)

Model author: Vasco && Khady
Model name:   GoLSingle
Model description:
RunGhostGameofLifeEditor*/


// package "GoLSingle"
var GoLSingle = {};
(function() {

var Interaction = function(controller) {
    RuntimeClassBase.call(this, controller);
    
    
    this.semantics.big_step_maximality = StatechartSemantics.TakeMany;
    this.semantics.internal_event_lifeline = StatechartSemantics.Queue;
    this.semantics.input_event_lifeline = StatechartSemantics.FirstComboStep;
    this.semantics.priority = StatechartSemantics.SourceParent;
    this.semantics.concurrency = StatechartSemantics.Single;
    
    // build Statechart structure
    this.build_statechart_structure();
    
    // user defined attributes
    this.context = null;
    
    // call user defined constructor
    Interaction.prototype.user_defined_constructor.call(this);
};
Interaction.prototype = new Object();
(function() {
    var proto = new RuntimeClassBase();
    for (prop in proto) {
        Interaction.prototype[prop] = proto[prop];
    }
})();

Interaction.prototype.user_defined_constructor = function() {
    vElement = {};
    this.svg = scConstructor("23");
    document.getElementById("playModelButton").addEventListener("click", function() {GoLSingle.Interaction.prototype.triggerEvent(event,"playModelButton",'press');}, false);
    document.getElementById("23").addEventListener("click",function() {GoLSingle.Interaction.prototype.triggerEvent(event,event.target.id,'select');}, false);
};

Interaction.prototype.user_defined_destructor = function() {
};


// user defined method
Interaction.prototype.triggerEvent = function(evt, type, internalEvt) {
    console.log(evt);
    var target = evt.target;
    // this is wrong but compiler gives error on ampers&&, hack module corrects this
    if(type == null && evt.type != "message") {
          if(evt.target.nodeName.toLowerCase() === "div"){
              target = evt.target;
          }else{
        if(evt.target.nodeName.toLowerCase() === "a"){
                target = evt.target.parentElement;
            }else{if(evt.target.nodeName.toLowerCase() === "i"){
                    target = evt.target.parentElement.parentElement;
                }
            }
        }
        // this is wrong but compiler gives error on ampers&&, hack module corrects this
        if(target != null && target.hasAttribute("id")){
            type = target.getAttribute("id");
        }
    }
    console.log(target.nodeName);
    console.log(type);
    console.log(internalEvt);
    console.log(controller.object_manager.instances[0].configuration);
    this.event=evt;
    vElement["focusEvent"] = evt;
    this.type = type;
    vElement["focusElement"] = evt.target;
    controller.addInput(new Event(internalEvt, "ui"), []);
    console.log(controller.object_manager.instances[0].configuration);
};


// user defined method
Interaction.prototype.Lifeadd = function(parOne, parTwo) {
    addLife.call(this,"23");
};


// user defined method
Interaction.prototype.Liferem = function(parOne, parTwo) {
    remLife.call(this,this.event.target);
};


// user defined method
Interaction.prototype.runGoL = function(parOne, parTwo) {
    simulateGoL.call(this);
};


// builds Statechart structure
Interaction.prototype.build_statechart_structure = function() {
    
    // state <root>
    this.states[""] = new State(0, "", this);
    
    // state /System
    this.states["/System"] = new ParallelState(1, "/System", this);
    
    // state /System/LayercomonTools
    this.states["/System/LayercomonTools"] = new State(2, "/System/LayercomonTools", this);
    
    // state /System/LayercomonTools/s0
    this.states["/System/LayercomonTools/s0"] = new State(3, "/System/LayercomonTools/s0", this);
    
    // state /System/LayercomonTools/s3
    this.states["/System/LayercomonTools/s3"] = new State(4, "/System/LayercomonTools/s3", this);
    
    // state /System/Layercanvas
    this.states["/System/Layercanvas"] = new State(5, "/System/Layercanvas", this);
    
    // state /System/Layercanvas/s1
    this.states["/System/Layercanvas/s1"] = new State(6, "/System/Layercanvas/s1", this);
    
    // state /System/LayerControler
    this.states["/System/LayerControler"] = new State(7, "/System/LayerControler", this);
    
    // state /System/LayerControler/h00
    this.states["/System/LayerControler/h00"] = new State(8, "/System/LayerControler/h00", this);
    
    // state /System/LayerController
    this.states["/System/LayerController"] = new State(9, "/System/LayerController", this);
    
    // state /System/LayerController/controller
    this.states["/System/LayerController/controller"] = new State(10, "/System/LayerController/controller", this);
    
    // add children
    this.states[""].addChild(this.states["/System"]);
    this.states["/System"].addChild(this.states["/System/LayercomonTools"]);
    this.states["/System"].addChild(this.states["/System/Layercanvas"]);
    this.states["/System"].addChild(this.states["/System/LayerControler"]);
    this.states["/System"].addChild(this.states["/System/LayerController"]);
    this.states["/System/LayercomonTools"].addChild(this.states["/System/LayercomonTools/s0"]);
    this.states["/System/LayercomonTools"].addChild(this.states["/System/LayercomonTools/s3"]);
    this.states["/System/Layercanvas"].addChild(this.states["/System/Layercanvas/s1"]);
    this.states["/System/LayerControler"].addChild(this.states["/System/LayerControler/h00"]);
    this.states["/System/LayerController"].addChild(this.states["/System/LayerController/controller"]);
    this.states[""].fixTree();
    this.states[""].default_state = this.states["/System"];
    this.states["/System/LayercomonTools"].default_state = this.states["/System/LayercomonTools/s0"];
    this.states["/System/Layercanvas"].default_state = this.states["/System/Layercanvas/s1"];
    this.states["/System/LayerControler"].default_state = this.states["/System/LayerControler/h00"];
    this.states["/System/LayerController"].default_state = this.states["/System/LayerController/controller"];
    
    // transition /System/LayercomonTools/s0
    var _System_LayercomonTools_s0_0 = new Transition(this, this.states["/System/LayercomonTools/s0"], [this.states["/System/LayercomonTools/s3"]]);
    _System_LayercomonTools_s0_0.setAction(this._System_LayercomonTools_s0_0_exec);
    _System_LayercomonTools_s0_0.setTrigger(new Event("press2", null));
    this.states["/System/LayercomonTools/s0"].addTransition(_System_LayercomonTools_s0_0);
    
    // transition /System/LayercomonTools/s3
    var _System_LayercomonTools_s3_0 = new Transition(this, this.states["/System/LayercomonTools/s3"], [this.states["/System/LayercomonTools/s0"]]);
    _System_LayercomonTools_s3_0.setAction(this._System_LayercomonTools_s3_0_exec);
    _System_LayercomonTools_s3_0.setTrigger(new Event("_finish6", null));
    this.states["/System/LayercomonTools/s3"].addTransition(_System_LayercomonTools_s3_0);
    
    // transition /System/Layercanvas/s1
    var _System_Layercanvas_s1_0 = new Transition(this, this.states["/System/Layercanvas/s1"], [this.states["/System/Layercanvas/s1"]]);
    _System_Layercanvas_s1_0.setAction(this._System_Layercanvas_s1_0_exec);
    _System_Layercanvas_s1_0.setTrigger(new Event("select0", null));
    this.states["/System/Layercanvas/s1"].addTransition(_System_Layercanvas_s1_0);
    var _System_Layercanvas_s1_1 = new Transition(this, this.states["/System/Layercanvas/s1"], [this.states["/System/Layercanvas/s1"]]);
    _System_Layercanvas_s1_1.setAction(this._System_Layercanvas_s1_1_exec);
    _System_Layercanvas_s1_1.setTrigger(new Event("select4", null));
    this.states["/System/Layercanvas/s1"].addTransition(_System_Layercanvas_s1_1);
    
    // transition /System/LayerControler/h00
    var _System_LayerControler_h00_0 = new Transition(this, this.states["/System/LayerControler/h00"], [this.states["/System/LayerControler/h00"]]);
    _System_LayerControler_h00_0.setAction(this._System_LayerControler_h00_0_exec);
    _System_LayerControler_h00_0.setTrigger(new Event("select", null));
    _System_LayerControler_h00_0.setGuard(this._System_LayerControler_h00_0_guard);
    this.states["/System/LayerControler/h00"].addTransition(_System_LayerControler_h00_0);
    var _System_LayerControler_h00_1 = new Transition(this, this.states["/System/LayerControler/h00"], [this.states["/System/LayerControler/h00"]]);
    _System_LayerControler_h00_1.setAction(this._System_LayerControler_h00_1_exec);
    _System_LayerControler_h00_1.setTrigger(new Event("press", null));
    _System_LayerControler_h00_1.setGuard(this._System_LayerControler_h00_1_guard);
    this.states["/System/LayerControler/h00"].addTransition(_System_LayerControler_h00_1);
    var _System_LayerControler_h00_2 = new Transition(this, this.states["/System/LayerControler/h00"], [this.states["/System/LayerControler/h00"]]);
    _System_LayerControler_h00_2.setAction(this._System_LayerControler_h00_2_exec);
    _System_LayerControler_h00_2.setTrigger(new Event("select", null));
    _System_LayerControler_h00_2.setGuard(this._System_LayerControler_h00_2_guard);
    this.states["/System/LayerControler/h00"].addTransition(_System_LayerControler_h00_2);
    var _System_LayerControler_h00_3 = new Transition(this, this.states["/System/LayerControler/h00"], [this.states["/System/LayerControler/h00"]]);
    _System_LayerControler_h00_3.setAction(this._System_LayerControler_h00_3_exec);
    _System_LayerControler_h00_3.setTrigger(new Event("_finish", null));
    _System_LayerControler_h00_3.setGuard(this._System_LayerControler_h00_3_guard);
    this.states["/System/LayerControler/h00"].addTransition(_System_LayerControler_h00_3);
};

Interaction.prototype._System_LayercomonTools_s0_0_exec = function(parameters) {
    screenset.call(this, 'playModelButton','active');
    this.runGoL();
    this.raiseInternalEvent(new Event("_step", null, new Array()));
};

Interaction.prototype._System_LayercomonTools_s3_0_exec = function(parameters) {
    screenset.call(this, 'playModelButton','default');
    this.raiseInternalEvent(new Event("_step", null, new Array()));
};

Interaction.prototype._System_Layercanvas_s1_0_exec = function(parameters) {
    this.Lifeadd("");
    this.raiseInternalEvent(new Event("_step", null, new Array()));
};

Interaction.prototype._System_Layercanvas_s1_1_exec = function(parameters) {
    this.Liferem("");
    this.raiseInternalEvent(new Event("_step", null, new Array()));
};

Interaction.prototype._System_LayerControler_h00_0_exec = function(parameters) {
    console.log( "RULE : CSAddInstance" );
    this.raiseInternalEvent(new Event("select0", null, new Array()));
};

Interaction.prototype._System_LayerControler_h00_0_guard = function(parameters) {
    return this.type == 'svgCanvas' && this.inState(["/System/Layercanvas/s1"]);
};

Interaction.prototype._System_LayerControler_h00_1_exec = function(parameters) {
    console.log( "RULE : RunTransfromation" );
    this.raiseInternalEvent(new Event("press2", null, new Array()));
};

Interaction.prototype._System_LayerControler_h00_1_guard = function(parameters) {
    return this.type == 'playModelButton' && this.inState(["/System/LayercomonTools/s0"]);
};

Interaction.prototype._System_LayerControler_h00_2_exec = function(parameters) {
    console.log( "RULE : CSRemInstance" );
    this.raiseInternalEvent(new Event("select4", null, new Array()));
};

Interaction.prototype._System_LayerControler_h00_2_guard = function(parameters) {
    return this.type == 'Life' && this.inState(["/System/Layercanvas/s1"]);
};

Interaction.prototype._System_LayerControler_h00_3_exec = function(parameters) {
    console.log( "RULE : EndTransformation" );
    this.raiseInternalEvent(new Event("_finish6", null, new Array()));
};

Interaction.prototype._System_LayerControler_h00_3_guard = function(parameters) {
    return this.inState(["/System/LayercomonTools/s3"]);
};

Interaction.prototype.initializeStatechart = function() {
    // enter default state
    this.default_targets = this.states["/System"].getEffectiveTargetStates();
    RuntimeClassBase.prototype.initializeStatechart.call(this);
};

// add symbol 'Interaction' to package 'GoLSingle'
GoLSingle.Interaction = Interaction;

var ObjectManager = function(controller) {
    ObjectManagerBase.call(this, controller);
};
ObjectManager.prototype = new Object();
(function() {
    var proto = new ObjectManagerBase();
    for (prop in proto) {
        ObjectManager.prototype[prop] = proto[prop];
    }
})();

ObjectManager.prototype.instantiate = function(class_name, construct_params) {
    if (class_name === "Interaction") {
        var instance = new Interaction(this.controller);
        instance.associations = new Object();
    } else  {
        throw new Error("Cannot instantiate class " + class_name);
    }
    return instance;
};

// add symbol 'ObjectManager' to package 'GoLSingle'
GoLSingle.ObjectManager = ObjectManager;

var Controller = function(event_loop_callbacks, finished_callback, behind_schedule_callback) {
    if (finished_callback === undefined) finished_callback = null;
    if (behind_schedule_callback === undefined) behind_schedule_callback = null;
    EventLoopControllerBase.call(this, new ObjectManager(this), event_loop_callbacks, finished_callback, behind_schedule_callback);
    this.addInputPort("ui");
    this.object_manager.createInstance("Interaction", new Array());
};
Controller.prototype = new Object();
(function() {
    var proto = new EventLoopControllerBase();
    for (prop in proto) {
        Controller.prototype[prop] = proto[prop];
    }
})();

// add symbol 'Controller' to package 'GoLSingle'
GoLSingle.Controller = Controller;
})();